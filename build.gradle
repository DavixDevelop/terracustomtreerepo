buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "Minecraft Forge"
            url = "https://maven.minecraftforge.net/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
plugins {
    id 'eclipse'
}
apply plugin: 'net.minecraftforge.gradle'


version = "0.3.0." + ('git rev-list --count HEAD'.execute().text.trim())
group = "com.davixdevelop.terracustomtreerepo"
archivesBaseName = "terracustomtreerepo"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: project.mapping_chanel, version: project.mapping_vers
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'

            // Load the necessary coremods.
            // (Credit - SmylerMC) IMPORTANT: For some reasons, MIXIN adds CC as a reparseable core mod when it loads, which causes FML to not load the regular CC mod.
            // A workaround to that is to trick MixinPlatformAgentFMLLegacy#isIgnoredReparseable(), either with a breakpoint, or with a symlink in the gradle cache directory,
            // or add the --mods option that points to the CC jar in the gradle cache directory, ex (adjust the ../ amount):
            // --mods=../../../../.gradle/caches/forge_gradle/deobf_dependencies/com/github/OpenCubicChunks/CubicChunks/1b8a0662a5_mapped_stable_39-1.12/CubicChunks-1b8a0662a5_mapped_stable_39-1.12.jar
            property 'fml.coreMods.load', 'io.github.opencubicchunks.cubicchunks.core.asm.coremod.CubicChunksCoreMod,io.github.opencubicchunks.cubicchunks.cubicgen.asm.coremod.CubicGenCoreMod'
            property 'mixin.env.disableRefMap', 'true'

            mods {
                terracommondatasets {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'fml.coreMods.load', 'io.github.opencubicchunks.cubicchunks.core.asm.coremod.CubicChunksCoreMod,io.github.opencubicchunks.cubicchunks.cubicgen.asm.coremod.CubicGenCoreMod'
            property 'mixin.env.disableRefMap', 'true'

            mods {
                terracommondatasets {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
	maven {
        name = "JitPack"
        url = "https://jitpack.io/"
    }
    maven {
        name = "DaPorkchop_"
        url = "https://maven.daporkchop.net/"
    }
}

dependencies {
    minecraft(group: "net.minecraftforge", name: "forge", version: project.minecraft_vers + '-' + project.forge_vers)

	implementation fg.deobf(group: "com.github.OpenCubicChunks", name: "CubicChunks", version: project.cubic_chunk_vers) {
        transitive = false
    }
    implementation fg.deobf (group: "com.github.OpenCubicChunks", name: "CubicWorldGen", version: project.cubic_world_gen_vers) {
        transitive = false
    }
    implementation fg.deobf(group: "com.github.BuildTheEarth", name: "terraplusplus", version: project.terraplusplus_vers) {
        transitive = true
    }

    implementation fg.deobf(group: "com.github.DavixDevelop", name: "terracommondatasets", version: project.terracommondatasets_vers) {
        transitive = false
    }

    // https://stackoverflow.com/questions/68377027/minecraft-forge-mod-loader-fml-loading-and-crashing-mc
    implementation fg.deobf("net.minecraftforge:mergetool:0.2.3.3:forge") { force = true }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft_vers
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft_vers
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : project.version,
                "Implementation-wTitle"    : project.mod_id,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

legacy {
    fixClasspath = true
}